{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DL_ANN_M.pynb","provenance":[{"file_id":"1R4tnTA6pXp4-W3rSAQPhQPv3FYNZWBFu","timestamp":1651771248244},{"file_id":"1uhB2_SHCjIsYc_Xoi5GVT_NnFFsSKYn6","timestamp":1651737194762},{"file_id":"15h_XrLTFjcU1E7QYf1nSwxObLaZJTYkG","timestamp":1651589891827}],"collapsed_sections":[],"mount_file_id":"1Me20ant2cycPXyXQ8lP5FRcY_tq9UGq7","authorship_tag":"ABX9TyM/Ge7gJHXnMMZeezgPiuI2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["    Classes = 23\n","    Samples total = 4898431\n","    Dimensionality = 41\n","    Features = discrete (int) or continuous (float)\n","    "],"metadata":{"id":"WZxh0am83UMi"}},{"cell_type":"code","source":["\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import matplotlib\n","import keras\n","\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","from keras.wrappers.scikit_learn import KerasClassifier\n","from keras.utils import np_utils\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import KFold\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.decomposition import PCA\n","from sklearn.model_selection import train_test_split\n","from sklearn.neural_network import MLPClassifier\n","from sklearn.metrics import accuracy_score\n","from sklearn.model_selection import cross_validate \n","from sklearn import metrics\n","\n","from tensorflow import keras\n","from tensorflow.keras import layers\n","from tensorflow.keras import initializers\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense, Activation\n","from tensorflow.keras.callbacks import EarlyStopping\n","\n","\n","from sklearn.model_selection import RepeatedKFold, cross_val_score\n","from tensorflow.keras.models import * \n","from tensorflow.keras.layers import * \n","from tensorflow.keras.wrappers.scikit_learn import KerasRegressor\n","\n","%matplotlib inline\n"],"metadata":{"id":"U-u4rDZf3M8J"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yOVxg5e71-Lk"},"outputs":[],"source":["data = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/data/kdd_data/kddcup_data.csv')                                "]},{"cell_type":"code","source":["print(data)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7jnJsQFx31gb","executionInfo":{"status":"ok","timestamp":1651822195739,"user_tz":-60,"elapsed":13,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"9d71613a-f0d8-49ec-e91e-46eeeb91644e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["        0  tcp  http  SF  181  5450  0.1  0.2  0.3  0.4  ...  9.1  1.2  0.22  \\\n","0       0  tcp  http  SF  239   486    0    0    0    0  ...   19  1.0   0.0   \n","1       0  tcp  http  SF  235  1337    0    0    0    0  ...   29  1.0   0.0   \n","2       0  tcp  http  SF  219  1337    0    0    0    0  ...   39  1.0   0.0   \n","3       0  tcp  http  SF  217  2032    0    0    0    0  ...   49  1.0   0.0   \n","4       0  tcp  http  SF  217  2032    0    0    0    0  ...   59  1.0   0.0   \n","...    ..  ...   ...  ..  ...   ...  ...  ...  ...  ...  ...  ...  ...   ...   \n","494015  0  tcp  http  SF  310  1881    0    0    0    0  ...  255  1.0   0.0   \n","494016  0  tcp  http  SF  282  2286    0    0    0    0  ...  255  1.0   0.0   \n","494017  0  tcp  http  SF  203  1200    0    0    0    0  ...  255  1.0   0.0   \n","494018  0  tcp  http  SF  291  1200    0    0    0    0  ...  255  1.0   0.0   \n","494019  0  tcp  http  SF  219  1234    0    0    0    0  ...  255  1.0   0.0   \n","\n","        0.11.1  0.23  0.24  0.25  0.26  0.27  normal.  \n","0         0.05  0.00  0.00  0.00   0.0   0.0  normal.  \n","1         0.03  0.00  0.00  0.00   0.0   0.0  normal.  \n","2         0.03  0.00  0.00  0.00   0.0   0.0  normal.  \n","3         0.02  0.00  0.00  0.00   0.0   0.0  normal.  \n","4         0.02  0.00  0.00  0.00   0.0   0.0  normal.  \n","...        ...   ...   ...   ...   ...   ...      ...  \n","494015    0.01  0.05  0.00  0.01   0.0   0.0  normal.  \n","494016    0.17  0.05  0.00  0.01   0.0   0.0  normal.  \n","494017    0.06  0.05  0.06  0.01   0.0   0.0  normal.  \n","494018    0.04  0.05  0.04  0.01   0.0   0.0  normal.  \n","494019    0.17  0.05  0.00  0.01   0.0   0.0  normal.  \n","\n","[494020 rows x 42 columns]\n"]}]},{"cell_type":"code","source":["print(f\"The total number of rows: {data.shape[0]} | The total number of columns: {data.shape[1]}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"o-2Q2yQEQFpX","executionInfo":{"status":"ok","timestamp":1651822196027,"user_tz":-60,"elapsed":300,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"6be2f470-f719-4b91-b6b2-24b90535d4db"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The total number of rows: 494020 | The total number of columns: 42\n"]}]},{"cell_type":"code","source":["data.columns = ['duration',\n","                'protocol_type',\n","                'service',\n","                'flag',\n","                'src_bytes',\n","                'dst_bytes',\n","                'land',\n","                'wrong_fragment',\n","                'urgent',\n","                'hot',\n","                'num_failed_logins',\n","                'logged_in',\n","                'num_compromised',\n","                'root_shell',\n","                'su_attempted',\n","                'num_root',\n","                'num_file_creations',\n","                'num_shells',\n","                'num_access_files',\n","                'num_outbound_cmds',\n","                'is_host_login',\n","                'is_guest_login',\n","                'count',\n","                'srv_count',\n","                'serror_rate',\n","                'srv_serror_rate',\n","                'rerror_rate',\n","                'srv_rerror_rate',\n","                'same_srv_rate',\n","                'diff_srv_rate',\n","                'srv_diff_host_rate',\n","                'dst_host_count',\n","                'dst_host_srv_count',\n","                'dst_host_same_srv_rate',\n","                'dst_host_diff_srv_rate',\n","                'dst_host_same_src_port_rate',\n","                'dst_host_srv_diff_host_rate',\n","                'dst_host_serror_rate',\n","                'dst_host_srv_serror_rate',\n","                'dst_host_rerror_rate',\n","                'dst_host_srv_rerror_rate',\n","                'labels'\n","                 ]"],"metadata":{"id":"sXD8E-OS5WOr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Checking to see any missing values in the dataset\n","print(data.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h5RaPT6vExMC","executionInfo":{"status":"ok","timestamp":1651822196499,"user_tz":-60,"elapsed":474,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"7046d512-f6c2-47e3-f1a6-6c8444526690"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["duration                       0\n","protocol_type                  0\n","service                        0\n","flag                           0\n","src_bytes                      0\n","dst_bytes                      0\n","land                           0\n","wrong_fragment                 0\n","urgent                         0\n","hot                            0\n","num_failed_logins              0\n","logged_in                      0\n","num_compromised                0\n","root_shell                     0\n","su_attempted                   0\n","num_root                       0\n","num_file_creations             0\n","num_shells                     0\n","num_access_files               0\n","num_outbound_cmds              0\n","is_host_login                  0\n","is_guest_login                 0\n","count                          0\n","srv_count                      0\n","serror_rate                    0\n","srv_serror_rate                0\n","rerror_rate                    0\n","srv_rerror_rate                0\n","same_srv_rate                  0\n","diff_srv_rate                  0\n","srv_diff_host_rate             0\n","dst_host_count                 0\n","dst_host_srv_count             0\n","dst_host_same_srv_rate         0\n","dst_host_diff_srv_rate         0\n","dst_host_same_src_port_rate    0\n","dst_host_srv_diff_host_rate    0\n","dst_host_serror_rate           0\n","dst_host_srv_serror_rate       0\n","dst_host_rerror_rate           0\n","dst_host_srv_rerror_rate       0\n","labels                         0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["print(data.duplicated())\n","\n","print(f\"The number of dublicated records in data frame: {data.duplicated().sum()}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2O4C29DoSUSp","executionInfo":{"status":"ok","timestamp":1651822199736,"user_tz":-60,"elapsed":3239,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"ae2120b9-2f60-4fe3-9771-d7104f0327c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["0         False\n","1         False\n","2         False\n","3         False\n","4         False\n","          ...  \n","494015    False\n","494016    False\n","494017    False\n","494018    False\n","494019    False\n","Length: 494020, dtype: bool\n","The number of dublicated records in data frame: 348435\n"]}]},{"cell_type":"code","source":["data.drop_duplicates(subset=None, keep='first', inplace=True)\n","\n","print(f\"The total number of rows after removing duplicate records: {data.shape[0]} | The total number of columns after removing duplicate records: {data.shape[1]}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LVuygoXdS-2B","executionInfo":{"status":"ok","timestamp":1651822201852,"user_tz":-60,"elapsed":2131,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"5e1124bd-1a36-4573-fc89-0d6216f8276c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The total number of rows after removing duplicate records: 145585 | The total number of columns after removing duplicate records: 42\n"]}]},{"cell_type":"code","source":["data.describe(include='all')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"hOznl-aR-pjH","executionInfo":{"status":"ok","timestamp":1651822202771,"user_tz":-60,"elapsed":924,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"c5d4b262-eb86-4cda-eff2-a8e075f7ceb2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             duration protocol_type service    flag     src_bytes  \\\n","count   145585.000000        145585  145585  145585  1.455850e+05   \n","unique            NaN             3      66      11           NaN   \n","top               NaN           tcp    http      SF           NaN   \n","freq              NaN        130912   62053   87458           NaN   \n","mean       132.026088           NaN     NaN     NaN  7.995753e+03   \n","std       1224.161209           NaN     NaN     NaN  1.820390e+06   \n","min          0.000000           NaN     NaN     NaN  0.000000e+00   \n","25%          0.000000           NaN     NaN     NaN  0.000000e+00   \n","50%          0.000000           NaN     NaN     NaN  1.470000e+02   \n","75%          0.000000           NaN     NaN     NaN  2.880000e+02   \n","max      58329.000000           NaN     NaN     NaN  6.933756e+08   \n","\n","           dst_bytes           land  wrong_fragment         urgent  \\\n","count   1.455850e+05  145585.000000   145585.000000  145585.000000   \n","unique           NaN            NaN             NaN            NaN   \n","top              NaN            NaN             NaN            NaN   \n","freq             NaN            NaN             NaN            NaN   \n","mean    2.859762e+03       0.000137        0.020201       0.000048   \n","std     6.081000e+04       0.011720        0.239369       0.010150   \n","min     0.000000e+00       0.000000        0.000000       0.000000   \n","25%     0.000000e+00       0.000000        0.000000       0.000000   \n","50%     1.050000e+02       0.000000        0.000000       0.000000   \n","75%     1.164000e+03       0.000000        0.000000       0.000000   \n","max     5.155468e+06       1.000000        3.000000       3.000000   \n","\n","                  hot  ...  dst_host_srv_count  dst_host_same_srv_rate  \\\n","count   145585.000000  ...       145585.000000           145585.000000   \n","unique            NaN  ...                 NaN                     NaN   \n","top               NaN  ...                 NaN                     NaN   \n","freq              NaN  ...                 NaN                     NaN   \n","mean         0.100175  ...          129.935508                0.553219   \n","std          1.426803  ...          114.714785                0.456236   \n","min          0.000000  ...            0.000000                0.000000   \n","25%          0.000000  ...           12.000000                0.050000   \n","50%          0.000000  ...          117.000000                0.770000   \n","75%          0.000000  ...          255.000000                1.000000   \n","max         30.000000  ...          255.000000                1.000000   \n","\n","        dst_host_diff_srv_rate  dst_host_same_src_port_rate  \\\n","count            145585.000000                145585.000000   \n","unique                     NaN                          NaN   \n","top                        NaN                          NaN   \n","freq                       NaN                          NaN   \n","mean                  0.061389                     0.092825   \n","std                   0.147021                     0.241124   \n","min                   0.000000                     0.000000   \n","25%                   0.000000                     0.000000   \n","50%                   0.020000                     0.000000   \n","75%                   0.070000                     0.030000   \n","max                   1.000000                     1.000000   \n","\n","        dst_host_srv_diff_host_rate  dst_host_serror_rate  \\\n","count                 145585.000000         145585.000000   \n","unique                          NaN                   NaN   \n","top                             NaN                   NaN   \n","freq                            NaN                   NaN   \n","mean                       0.019048              0.291599   \n","std                        0.060410              0.452493   \n","min                        0.000000              0.000000   \n","25%                        0.000000              0.000000   \n","50%                        0.000000              0.000000   \n","75%                        0.020000              1.000000   \n","max                        1.000000              1.000000   \n","\n","        dst_host_srv_serror_rate  dst_host_rerror_rate  \\\n","count              145585.000000         145585.000000   \n","unique                       NaN                   NaN   \n","top                          NaN                   NaN   \n","freq                         NaN                   NaN   \n","mean                    0.290980              0.110464   \n","std                     0.453448              0.306098   \n","min                     0.000000              0.000000   \n","25%                     0.000000              0.000000   \n","50%                     0.000000              0.000000   \n","75%                     1.000000              0.000000   \n","max                     1.000000              1.000000   \n","\n","        dst_host_srv_rerror_rate   labels  \n","count              145585.000000   145585  \n","unique                       NaN       23  \n","top                          NaN  normal.  \n","freq                         NaN    87831  \n","mean                    0.107676      NaN  \n","std                     0.304221      NaN  \n","min                     0.000000      NaN  \n","25%                     0.000000      NaN  \n","50%                     0.000000      NaN  \n","75%                     0.000000      NaN  \n","max                     1.000000      NaN  \n","\n","[11 rows x 42 columns]"],"text/html":["\n","  <div id=\"df-574f76d2-4f75-41ed-8db3-9947585a0eea\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration</th>\n","      <th>protocol_type</th>\n","      <th>service</th>\n","      <th>flag</th>\n","      <th>src_bytes</th>\n","      <th>dst_bytes</th>\n","      <th>land</th>\n","      <th>wrong_fragment</th>\n","      <th>urgent</th>\n","      <th>hot</th>\n","      <th>...</th>\n","      <th>dst_host_srv_count</th>\n","      <th>dst_host_same_srv_rate</th>\n","      <th>dst_host_diff_srv_rate</th>\n","      <th>dst_host_same_src_port_rate</th>\n","      <th>dst_host_srv_diff_host_rate</th>\n","      <th>dst_host_serror_rate</th>\n","      <th>dst_host_srv_serror_rate</th>\n","      <th>dst_host_rerror_rate</th>\n","      <th>dst_host_srv_rerror_rate</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>145585.000000</td>\n","      <td>145585</td>\n","      <td>145585</td>\n","      <td>145585</td>\n","      <td>1.455850e+05</td>\n","      <td>1.455850e+05</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>...</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585.000000</td>\n","      <td>145585</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>66</td>\n","      <td>11</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>NaN</td>\n","      <td>tcp</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>normal.</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>NaN</td>\n","      <td>130912</td>\n","      <td>62053</td>\n","      <td>87458</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>87831</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>132.026088</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>7.995753e+03</td>\n","      <td>2.859762e+03</td>\n","      <td>0.000137</td>\n","      <td>0.020201</td>\n","      <td>0.000048</td>\n","      <td>0.100175</td>\n","      <td>...</td>\n","      <td>129.935508</td>\n","      <td>0.553219</td>\n","      <td>0.061389</td>\n","      <td>0.092825</td>\n","      <td>0.019048</td>\n","      <td>0.291599</td>\n","      <td>0.290980</td>\n","      <td>0.110464</td>\n","      <td>0.107676</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1224.161209</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.820390e+06</td>\n","      <td>6.081000e+04</td>\n","      <td>0.011720</td>\n","      <td>0.239369</td>\n","      <td>0.010150</td>\n","      <td>1.426803</td>\n","      <td>...</td>\n","      <td>114.714785</td>\n","      <td>0.456236</td>\n","      <td>0.147021</td>\n","      <td>0.241124</td>\n","      <td>0.060410</td>\n","      <td>0.452493</td>\n","      <td>0.453448</td>\n","      <td>0.306098</td>\n","      <td>0.304221</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>12.000000</td>\n","      <td>0.050000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1.470000e+02</td>\n","      <td>1.050000e+02</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>117.000000</td>\n","      <td>0.770000</td>\n","      <td>0.020000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.880000e+02</td>\n","      <td>1.164000e+03</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>...</td>\n","      <td>255.000000</td>\n","      <td>1.000000</td>\n","      <td>0.070000</td>\n","      <td>0.030000</td>\n","      <td>0.020000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>58329.000000</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.933756e+08</td>\n","      <td>5.155468e+06</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>30.000000</td>\n","      <td>...</td>\n","      <td>255.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>11 rows × 42 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-574f76d2-4f75-41ed-8db3-9947585a0eea')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-574f76d2-4f75-41ed-8db3-9947585a0eea button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-574f76d2-4f75-41ed-8db3-9947585a0eea');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["data.isin([0]).any().any()\n","\n","# Removing the columns that has nothing but zeros. \n","\n","data['num_outbound_cmds'].value_counts()\n","data.drop('num_outbound_cmds', axis=1, inplace=True)\n","\n","data['is_host_login'].value_counts()\n","data.drop('is_host_login', axis=1, inplace=True)\n","\n","                "],"metadata":{"id":"uVlgNgnSBMOP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# data = data.select_dtypes(include=['object']).copy()\n","# data.head()\n","# TO see the categorical values\n","\n"],"metadata":{"id":"L1iyFcwhxvNG"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['protocol_type'].value_counts()\n","\n","num_protocol_type = {\"protocol_type\":{\"tcp\": 0, \"udp\": 1, \"icmp\":2}}\n","\n","data = data.replace(num_protocol_type)\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"G6K-8dm70jrZ","executionInfo":{"status":"ok","timestamp":1651822205189,"user_tz":-60,"elapsed":333,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"ae2fdab4-e2b5-4e00-cc3a-8792f3e71522"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   duration  protocol_type service flag  src_bytes  dst_bytes  land  \\\n","0         0              0    http   SF        239        486     0   \n","1         0              0    http   SF        235       1337     0   \n","2         0              0    http   SF        219       1337     0   \n","3         0              0    http   SF        217       2032     0   \n","4         0              0    http   SF        217       2032     0   \n","\n","   wrong_fragment  urgent  hot  ...  dst_host_srv_count  \\\n","0               0       0    0  ...                  19   \n","1               0       0    0  ...                  29   \n","2               0       0    0  ...                  39   \n","3               0       0    0  ...                  49   \n","4               0       0    0  ...                  59   \n","\n","   dst_host_same_srv_rate  dst_host_diff_srv_rate  \\\n","0                     1.0                     0.0   \n","1                     1.0                     0.0   \n","2                     1.0                     0.0   \n","3                     1.0                     0.0   \n","4                     1.0                     0.0   \n","\n","   dst_host_same_src_port_rate  dst_host_srv_diff_host_rate  \\\n","0                         0.05                          0.0   \n","1                         0.03                          0.0   \n","2                         0.03                          0.0   \n","3                         0.02                          0.0   \n","4                         0.02                          0.0   \n","\n","   dst_host_serror_rate  dst_host_srv_serror_rate  dst_host_rerror_rate  \\\n","0                   0.0                       0.0                   0.0   \n","1                   0.0                       0.0                   0.0   \n","2                   0.0                       0.0                   0.0   \n","3                   0.0                       0.0                   0.0   \n","4                   0.0                       0.0                   0.0   \n","\n","   dst_host_srv_rerror_rate   labels  \n","0                       0.0  normal.  \n","1                       0.0  normal.  \n","2                       0.0  normal.  \n","3                       0.0  normal.  \n","4                       0.0  normal.  \n","\n","[5 rows x 40 columns]"],"text/html":["\n","  <div id=\"df-f2d8b487-e6fc-4827-aa95-392b1172fc7d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration</th>\n","      <th>protocol_type</th>\n","      <th>service</th>\n","      <th>flag</th>\n","      <th>src_bytes</th>\n","      <th>dst_bytes</th>\n","      <th>land</th>\n","      <th>wrong_fragment</th>\n","      <th>urgent</th>\n","      <th>hot</th>\n","      <th>...</th>\n","      <th>dst_host_srv_count</th>\n","      <th>dst_host_same_srv_rate</th>\n","      <th>dst_host_diff_srv_rate</th>\n","      <th>dst_host_same_src_port_rate</th>\n","      <th>dst_host_srv_diff_host_rate</th>\n","      <th>dst_host_serror_rate</th>\n","      <th>dst_host_srv_serror_rate</th>\n","      <th>dst_host_rerror_rate</th>\n","      <th>dst_host_srv_rerror_rate</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>239</td>\n","      <td>486</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>19</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.05</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>235</td>\n","      <td>1337</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>29</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>219</td>\n","      <td>1337</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>39</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>217</td>\n","      <td>2032</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>49</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>SF</td>\n","      <td>217</td>\n","      <td>2032</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>59</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 40 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f2d8b487-e6fc-4827-aa95-392b1172fc7d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f2d8b487-e6fc-4827-aa95-392b1172fc7d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f2d8b487-e6fc-4827-aa95-392b1172fc7d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["data['flag'].value_counts()\n","\n","num_flag = {\"flag\":{\"SF\": 0, \"S0\": 1, \"REJ\":2,\"RSTO\":3,\"RSTR\":4,\"S1\":5,\"SH\":6,\"S2\":7,\"RSTOS0\":8,\"S3\":9,\"OTH\":10}}\n","data = data.replace(num_flag)\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"IcTBKg9R3AUB","executionInfo":{"status":"ok","timestamp":1651822205927,"user_tz":-60,"elapsed":741,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"1250961e-a89a-48dd-e3ea-a5d082f45dc2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   duration  protocol_type service  flag  src_bytes  dst_bytes  land  \\\n","0         0              0    http     0        239        486     0   \n","1         0              0    http     0        235       1337     0   \n","2         0              0    http     0        219       1337     0   \n","3         0              0    http     0        217       2032     0   \n","4         0              0    http     0        217       2032     0   \n","\n","   wrong_fragment  urgent  hot  ...  dst_host_srv_count  \\\n","0               0       0    0  ...                  19   \n","1               0       0    0  ...                  29   \n","2               0       0    0  ...                  39   \n","3               0       0    0  ...                  49   \n","4               0       0    0  ...                  59   \n","\n","   dst_host_same_srv_rate  dst_host_diff_srv_rate  \\\n","0                     1.0                     0.0   \n","1                     1.0                     0.0   \n","2                     1.0                     0.0   \n","3                     1.0                     0.0   \n","4                     1.0                     0.0   \n","\n","   dst_host_same_src_port_rate  dst_host_srv_diff_host_rate  \\\n","0                         0.05                          0.0   \n","1                         0.03                          0.0   \n","2                         0.03                          0.0   \n","3                         0.02                          0.0   \n","4                         0.02                          0.0   \n","\n","   dst_host_serror_rate  dst_host_srv_serror_rate  dst_host_rerror_rate  \\\n","0                   0.0                       0.0                   0.0   \n","1                   0.0                       0.0                   0.0   \n","2                   0.0                       0.0                   0.0   \n","3                   0.0                       0.0                   0.0   \n","4                   0.0                       0.0                   0.0   \n","\n","   dst_host_srv_rerror_rate   labels  \n","0                       0.0  normal.  \n","1                       0.0  normal.  \n","2                       0.0  normal.  \n","3                       0.0  normal.  \n","4                       0.0  normal.  \n","\n","[5 rows x 40 columns]"],"text/html":["\n","  <div id=\"df-c6dad1a4-a729-4fb0-b762-b6193ddd483d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration</th>\n","      <th>protocol_type</th>\n","      <th>service</th>\n","      <th>flag</th>\n","      <th>src_bytes</th>\n","      <th>dst_bytes</th>\n","      <th>land</th>\n","      <th>wrong_fragment</th>\n","      <th>urgent</th>\n","      <th>hot</th>\n","      <th>...</th>\n","      <th>dst_host_srv_count</th>\n","      <th>dst_host_same_srv_rate</th>\n","      <th>dst_host_diff_srv_rate</th>\n","      <th>dst_host_same_src_port_rate</th>\n","      <th>dst_host_srv_diff_host_rate</th>\n","      <th>dst_host_serror_rate</th>\n","      <th>dst_host_srv_serror_rate</th>\n","      <th>dst_host_rerror_rate</th>\n","      <th>dst_host_srv_rerror_rate</th>\n","      <th>labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>0</td>\n","      <td>239</td>\n","      <td>486</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>19</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.05</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>0</td>\n","      <td>235</td>\n","      <td>1337</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>29</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>0</td>\n","      <td>219</td>\n","      <td>1337</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>39</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>0</td>\n","      <td>217</td>\n","      <td>2032</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>49</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>http</td>\n","      <td>0</td>\n","      <td>217</td>\n","      <td>2032</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>59</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 40 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6dad1a4-a729-4fb0-b762-b6193ddd483d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c6dad1a4-a729-4fb0-b762-b6193ddd483d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c6dad1a4-a729-4fb0-b762-b6193ddd483d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["data['service'] = data['service'].astype('category')\n","cat_columns = data.select_dtypes(['category']).columns\n","data[cat_columns] = data[cat_columns].apply(lambda x: x.cat.codes)\n","data.head()\n","\n","data['service'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fWLAYVRF37tC","executionInfo":{"status":"ok","timestamp":1651822205928,"user_tz":-60,"elapsed":4,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"7d478d45-f572-4e23-b89f-9c14593166c3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["22    62053\n","45    49057\n","50     9721\n","11     5425\n","40     4769\n","      ...  \n","1        11\n","58        5\n","41        1\n","57        1\n","46        1\n","Name: service, Length: 66, dtype: int64"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["def categorise(row):  \n","    if row['labels'] == 'normal.':\n","        return 'normal'\n","    elif row['labels'] == 'back.' or row['labels'] == 'land.' or row['labels'] == 'neptune.' or row['labels'] == 'pod.' or row['labels']== 'smurf.' or row['labels'] == 'teardrop.':\n","        return 'dos'\n","    elif row['labels'] == 'buffer_overflow.' or row['labels'] == 'loadmodule.' or row['labels'] == 'perl.' or row['labels'] == 'rootkit.':\n","        return 'u2r'\n","    elif row['labels'] == 'ftp_write.' or row['labels'] == 'guess_passwd.' or row['labels'] == 'imap.' or row['labels'] == 'multihop.' or row['labels'] == 'phf.' or row['labels'] == 'spy.' or row['labels'] == 'warezclient.' or row['labels'] == 'warezmaster.':\n","        return 'r2l'\n","    elif row['labels'] == 'ipsweep.' or row['labels'] == 'nmap.' or row['labels'] == 'portsweep.' or row['labels'] == 'satan.':\n","        return 'probe'\n","\n","data['label_types'] = data.apply(lambda row: categorise(row), axis=1)"],"metadata":{"id":"xWusoEymHS3S"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data['label_types'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4G8TRQe5Qtdd","executionInfo":{"status":"ok","timestamp":1651822211846,"user_tz":-60,"elapsed":16,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"9c7263f1-2303-412a-a54c-476dc8396b21"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["normal    87831\n","dos       54572\n","probe      2131\n","r2l         999\n","u2r          52\n","Name: label_types, dtype: int64"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["plt.clf()\n","plt.figure(figsize=(12,8))\n","params = {'axes.titlesize':'18',\n","          'xtick.labelsize':'14',\n","          'ytick.labelsize':'14'}\n","matplotlib.rcParams.update(params)\n","plt.title('Distribution of attacks')\n","#df.plot(kind='barh')\n","data['label_types'].value_counts().apply(np.log).plot(kind='pie')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":521},"id":"G63pDDTUUM_X","executionInfo":{"status":"ok","timestamp":1651822212206,"user_tz":-60,"elapsed":374,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"e43a8d92-f6f8-49c2-9b50-c63842fd63a9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fd43ce689d0>"]},"metadata":{},"execution_count":17},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 864x576 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":487},"id":"RvmzutdmWXAo","executionInfo":{"status":"ok","timestamp":1651822212503,"user_tz":-60,"elapsed":300,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"37b4c413-a230-4d60-f94d-4257cf20e3a2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        duration  protocol_type  service  flag  src_bytes  dst_bytes  land  \\\n","0              0              0       22     0        239        486     0   \n","1              0              0       22     0        235       1337     0   \n","2              0              0       22     0        219       1337     0   \n","3              0              0       22     0        217       2032     0   \n","4              0              0       22     0        217       2032     0   \n","...          ...            ...      ...   ...        ...        ...   ...   \n","494015         0              0       22     0        310       1881     0   \n","494016         0              0       22     0        282       2286     0   \n","494017         0              0       22     0        203       1200     0   \n","494018         0              0       22     0        291       1200     0   \n","494019         0              0       22     0        219       1234     0   \n","\n","        wrong_fragment  urgent  hot  ...  dst_host_same_srv_rate  \\\n","0                    0       0    0  ...                     1.0   \n","1                    0       0    0  ...                     1.0   \n","2                    0       0    0  ...                     1.0   \n","3                    0       0    0  ...                     1.0   \n","4                    0       0    0  ...                     1.0   \n","...                ...     ...  ...  ...                     ...   \n","494015               0       0    0  ...                     1.0   \n","494016               0       0    0  ...                     1.0   \n","494017               0       0    0  ...                     1.0   \n","494018               0       0    0  ...                     1.0   \n","494019               0       0    0  ...                     1.0   \n","\n","        dst_host_diff_srv_rate  dst_host_same_src_port_rate  \\\n","0                          0.0                         0.05   \n","1                          0.0                         0.03   \n","2                          0.0                         0.03   \n","3                          0.0                         0.02   \n","4                          0.0                         0.02   \n","...                        ...                          ...   \n","494015                     0.0                         0.01   \n","494016                     0.0                         0.17   \n","494017                     0.0                         0.06   \n","494018                     0.0                         0.04   \n","494019                     0.0                         0.17   \n","\n","        dst_host_srv_diff_host_rate  dst_host_serror_rate  \\\n","0                              0.00                  0.00   \n","1                              0.00                  0.00   \n","2                              0.00                  0.00   \n","3                              0.00                  0.00   \n","4                              0.00                  0.00   \n","...                             ...                   ...   \n","494015                         0.05                  0.00   \n","494016                         0.05                  0.00   \n","494017                         0.05                  0.06   \n","494018                         0.05                  0.04   \n","494019                         0.05                  0.00   \n","\n","        dst_host_srv_serror_rate  dst_host_rerror_rate  \\\n","0                           0.00                   0.0   \n","1                           0.00                   0.0   \n","2                           0.00                   0.0   \n","3                           0.00                   0.0   \n","4                           0.00                   0.0   \n","...                          ...                   ...   \n","494015                      0.01                   0.0   \n","494016                      0.01                   0.0   \n","494017                      0.01                   0.0   \n","494018                      0.01                   0.0   \n","494019                      0.01                   0.0   \n","\n","        dst_host_srv_rerror_rate   labels  label_types  \n","0                            0.0  normal.       normal  \n","1                            0.0  normal.       normal  \n","2                            0.0  normal.       normal  \n","3                            0.0  normal.       normal  \n","4                            0.0  normal.       normal  \n","...                          ...      ...          ...  \n","494015                       0.0  normal.       normal  \n","494016                       0.0  normal.       normal  \n","494017                       0.0  normal.       normal  \n","494018                       0.0  normal.       normal  \n","494019                       0.0  normal.       normal  \n","\n","[145585 rows x 41 columns]"],"text/html":["\n","  <div id=\"df-6d9cacf8-8188-4b9b-aecc-8f91761d275e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration</th>\n","      <th>protocol_type</th>\n","      <th>service</th>\n","      <th>flag</th>\n","      <th>src_bytes</th>\n","      <th>dst_bytes</th>\n","      <th>land</th>\n","      <th>wrong_fragment</th>\n","      <th>urgent</th>\n","      <th>hot</th>\n","      <th>...</th>\n","      <th>dst_host_same_srv_rate</th>\n","      <th>dst_host_diff_srv_rate</th>\n","      <th>dst_host_same_src_port_rate</th>\n","      <th>dst_host_srv_diff_host_rate</th>\n","      <th>dst_host_serror_rate</th>\n","      <th>dst_host_srv_serror_rate</th>\n","      <th>dst_host_rerror_rate</th>\n","      <th>dst_host_srv_rerror_rate</th>\n","      <th>labels</th>\n","      <th>label_types</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>239</td>\n","      <td>486</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.05</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>235</td>\n","      <td>1337</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>219</td>\n","      <td>1337</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>217</td>\n","      <td>2032</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>217</td>\n","      <td>2032</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>494015</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>310</td>\n","      <td>1881</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.01</td>\n","      <td>0.05</td>\n","      <td>0.00</td>\n","      <td>0.01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>494016</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>282</td>\n","      <td>2286</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.17</td>\n","      <td>0.05</td>\n","      <td>0.00</td>\n","      <td>0.01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>494017</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>203</td>\n","      <td>1200</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.06</td>\n","      <td>0.05</td>\n","      <td>0.06</td>\n","      <td>0.01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>494018</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>291</td>\n","      <td>1200</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.04</td>\n","      <td>0.05</td>\n","      <td>0.04</td>\n","      <td>0.01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>494019</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>22</td>\n","      <td>0</td>\n","      <td>219</td>\n","      <td>1234</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.17</td>\n","      <td>0.05</td>\n","      <td>0.00</td>\n","      <td>0.01</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>145585 rows × 41 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d9cacf8-8188-4b9b-aecc-8f91761d275e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6d9cacf8-8188-4b9b-aecc-8f91761d275e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6d9cacf8-8188-4b9b-aecc-8f91761d275e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["data['src_bytes'] = (data['src_bytes'] - data['src_bytes'].mean()) / data['src_bytes'].std() \n","data['dst_bytes'] = (data['dst_bytes'] - data['dst_bytes'].mean()) / data['dst_bytes'].std() \n","data['srv_count'] = (data['srv_count'] - data['srv_count'].mean()) / data['srv_count'].std() \n","data['dst_host_count'] = (data['dst_host_count'] - data['dst_host_count'].mean()) / data['dst_host_count'].std() \n","data['dst_host_srv_count'] = (data['dst_host_srv_count'] - data['dst_host_srv_count'].mean()) / data['dst_host_srv_count'].std()\n","data['service'] = (data['service'] - data['service'].mean()) / data['service'].std()  \n","\n"],"metadata":{"id":"rYqhzDDx2Csl"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"vXKNuyZB48Uy","executionInfo":{"status":"ok","timestamp":1651822212978,"user_tz":-60,"elapsed":480,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"1f349f4f-e72e-4403-f8d1-56d6ead42a4c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   duration  protocol_type   service  flag  src_bytes  dst_bytes  land  \\\n","0         0              0 -0.778626     0  -0.004261  -0.039036     0   \n","1         0              0 -0.778626     0  -0.004263  -0.025041     0   \n","2         0              0 -0.778626     0  -0.004272  -0.025041     0   \n","3         0              0 -0.778626     0  -0.004273  -0.013612     0   \n","4         0              0 -0.778626     0  -0.004273  -0.013612     0   \n","\n","   wrong_fragment  urgent  hot  ...  dst_host_same_srv_rate  \\\n","0               0       0    0  ...                     1.0   \n","1               0       0    0  ...                     1.0   \n","2               0       0    0  ...                     1.0   \n","3               0       0    0  ...                     1.0   \n","4               0       0    0  ...                     1.0   \n","\n","   dst_host_diff_srv_rate  dst_host_same_src_port_rate  \\\n","0                     0.0                         0.05   \n","1                     0.0                         0.03   \n","2                     0.0                         0.03   \n","3                     0.0                         0.02   \n","4                     0.0                         0.02   \n","\n","   dst_host_srv_diff_host_rate  dst_host_serror_rate  \\\n","0                          0.0                   0.0   \n","1                          0.0                   0.0   \n","2                          0.0                   0.0   \n","3                          0.0                   0.0   \n","4                          0.0                   0.0   \n","\n","   dst_host_srv_serror_rate  dst_host_rerror_rate  dst_host_srv_rerror_rate  \\\n","0                       0.0                   0.0                       0.0   \n","1                       0.0                   0.0                       0.0   \n","2                       0.0                   0.0                       0.0   \n","3                       0.0                   0.0                       0.0   \n","4                       0.0                   0.0                       0.0   \n","\n","    labels  label_types  \n","0  normal.       normal  \n","1  normal.       normal  \n","2  normal.       normal  \n","3  normal.       normal  \n","4  normal.       normal  \n","\n","[5 rows x 41 columns]"],"text/html":["\n","  <div id=\"df-48f98fd7-1ac7-4b68-8237-03331e9a4272\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration</th>\n","      <th>protocol_type</th>\n","      <th>service</th>\n","      <th>flag</th>\n","      <th>src_bytes</th>\n","      <th>dst_bytes</th>\n","      <th>land</th>\n","      <th>wrong_fragment</th>\n","      <th>urgent</th>\n","      <th>hot</th>\n","      <th>...</th>\n","      <th>dst_host_same_srv_rate</th>\n","      <th>dst_host_diff_srv_rate</th>\n","      <th>dst_host_same_src_port_rate</th>\n","      <th>dst_host_srv_diff_host_rate</th>\n","      <th>dst_host_serror_rate</th>\n","      <th>dst_host_srv_serror_rate</th>\n","      <th>dst_host_rerror_rate</th>\n","      <th>dst_host_srv_rerror_rate</th>\n","      <th>labels</th>\n","      <th>label_types</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004261</td>\n","      <td>-0.039036</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.05</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004263</td>\n","      <td>-0.025041</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004272</td>\n","      <td>-0.025041</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004273</td>\n","      <td>-0.013612</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004273</td>\n","      <td>-0.013612</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 41 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-48f98fd7-1ac7-4b68-8237-03331e9a4272')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-48f98fd7-1ac7-4b68-8237-03331e9a4272 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-48f98fd7-1ac7-4b68-8237-03331e9a4272');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["data['dst_host_count'] = MinMaxScaler().fit_transform(np.array(data['dst_host_count']).reshape(-1,1))\n"],"metadata":{"id":"G8BihS_g7H8w"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"DCOXeBY97LaC","executionInfo":{"status":"ok","timestamp":1651822212980,"user_tz":-60,"elapsed":8,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"ae44c645-8684-4c0f-e824-9fa522ce561f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   duration  protocol_type   service  flag  src_bytes  dst_bytes  land  \\\n","0         0              0 -0.778626     0  -0.004261  -0.039036     0   \n","1         0              0 -0.778626     0  -0.004263  -0.025041     0   \n","2         0              0 -0.778626     0  -0.004272  -0.025041     0   \n","3         0              0 -0.778626     0  -0.004273  -0.013612     0   \n","4         0              0 -0.778626     0  -0.004273  -0.013612     0   \n","\n","   wrong_fragment  urgent  hot  ...  dst_host_same_srv_rate  \\\n","0               0       0    0  ...                     1.0   \n","1               0       0    0  ...                     1.0   \n","2               0       0    0  ...                     1.0   \n","3               0       0    0  ...                     1.0   \n","4               0       0    0  ...                     1.0   \n","\n","   dst_host_diff_srv_rate  dst_host_same_src_port_rate  \\\n","0                     0.0                         0.05   \n","1                     0.0                         0.03   \n","2                     0.0                         0.03   \n","3                     0.0                         0.02   \n","4                     0.0                         0.02   \n","\n","   dst_host_srv_diff_host_rate  dst_host_serror_rate  \\\n","0                          0.0                   0.0   \n","1                          0.0                   0.0   \n","2                          0.0                   0.0   \n","3                          0.0                   0.0   \n","4                          0.0                   0.0   \n","\n","   dst_host_srv_serror_rate  dst_host_rerror_rate  dst_host_srv_rerror_rate  \\\n","0                       0.0                   0.0                       0.0   \n","1                       0.0                   0.0                       0.0   \n","2                       0.0                   0.0                       0.0   \n","3                       0.0                   0.0                       0.0   \n","4                       0.0                   0.0                       0.0   \n","\n","    labels  label_types  \n","0  normal.       normal  \n","1  normal.       normal  \n","2  normal.       normal  \n","3  normal.       normal  \n","4  normal.       normal  \n","\n","[5 rows x 41 columns]"],"text/html":["\n","  <div id=\"df-312fcbca-426c-4dea-8a2c-7a506c952757\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration</th>\n","      <th>protocol_type</th>\n","      <th>service</th>\n","      <th>flag</th>\n","      <th>src_bytes</th>\n","      <th>dst_bytes</th>\n","      <th>land</th>\n","      <th>wrong_fragment</th>\n","      <th>urgent</th>\n","      <th>hot</th>\n","      <th>...</th>\n","      <th>dst_host_same_srv_rate</th>\n","      <th>dst_host_diff_srv_rate</th>\n","      <th>dst_host_same_src_port_rate</th>\n","      <th>dst_host_srv_diff_host_rate</th>\n","      <th>dst_host_serror_rate</th>\n","      <th>dst_host_srv_serror_rate</th>\n","      <th>dst_host_rerror_rate</th>\n","      <th>dst_host_srv_rerror_rate</th>\n","      <th>labels</th>\n","      <th>label_types</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004261</td>\n","      <td>-0.039036</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.05</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004263</td>\n","      <td>-0.025041</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004272</td>\n","      <td>-0.025041</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004273</td>\n","      <td>-0.013612</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004273</td>\n","      <td>-0.013612</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.02</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>normal</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 41 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-312fcbca-426c-4dea-8a2c-7a506c952757')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-312fcbca-426c-4dea-8a2c-7a506c952757 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-312fcbca-426c-4dea-8a2c-7a506c952757');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["#data['label_types'].value_counts()\n","num_label_types = {\"label_types\":{\"normal\": 0, \"dos\": 1, \"probe\":2, \"r2l\": 3, \"u2r\":4}}\n","data = data.replace(num_label_types)\n","\n","# num_label_types = {\"label_types\":{\"normal\": 0, \"dos\": 1, \"probe\":1, \"r2l\": 1, \"u2r\":1}}\n","# data = data.replace(num_label_types)"],"metadata":{"id":"TqMx4jWJgZuK"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"_p0_uaP6jv_9","executionInfo":{"status":"ok","timestamp":1651822213206,"user_tz":-60,"elapsed":6,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"e6755d3a-bec4-4d92-df19-10c799b6213a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   duration  protocol_type   service  flag  src_bytes  dst_bytes  land  \\\n","0         0              0 -0.778626     0  -0.004261  -0.039036     0   \n","1         0              0 -0.778626     0  -0.004263  -0.025041     0   \n","2         0              0 -0.778626     0  -0.004272  -0.025041     0   \n","\n","   wrong_fragment  urgent  hot  ...  dst_host_same_srv_rate  \\\n","0               0       0    0  ...                     1.0   \n","1               0       0    0  ...                     1.0   \n","2               0       0    0  ...                     1.0   \n","\n","   dst_host_diff_srv_rate  dst_host_same_src_port_rate  \\\n","0                     0.0                         0.05   \n","1                     0.0                         0.03   \n","2                     0.0                         0.03   \n","\n","   dst_host_srv_diff_host_rate  dst_host_serror_rate  \\\n","0                          0.0                   0.0   \n","1                          0.0                   0.0   \n","2                          0.0                   0.0   \n","\n","   dst_host_srv_serror_rate  dst_host_rerror_rate  dst_host_srv_rerror_rate  \\\n","0                       0.0                   0.0                       0.0   \n","1                       0.0                   0.0                       0.0   \n","2                       0.0                   0.0                       0.0   \n","\n","    labels  label_types  \n","0  normal.            0  \n","1  normal.            0  \n","2  normal.            0  \n","\n","[3 rows x 41 columns]"],"text/html":["\n","  <div id=\"df-4435adf2-287a-4799-a75d-cf014bd157f9\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>duration</th>\n","      <th>protocol_type</th>\n","      <th>service</th>\n","      <th>flag</th>\n","      <th>src_bytes</th>\n","      <th>dst_bytes</th>\n","      <th>land</th>\n","      <th>wrong_fragment</th>\n","      <th>urgent</th>\n","      <th>hot</th>\n","      <th>...</th>\n","      <th>dst_host_same_srv_rate</th>\n","      <th>dst_host_diff_srv_rate</th>\n","      <th>dst_host_same_src_port_rate</th>\n","      <th>dst_host_srv_diff_host_rate</th>\n","      <th>dst_host_serror_rate</th>\n","      <th>dst_host_srv_serror_rate</th>\n","      <th>dst_host_rerror_rate</th>\n","      <th>dst_host_srv_rerror_rate</th>\n","      <th>labels</th>\n","      <th>label_types</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004261</td>\n","      <td>-0.039036</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.05</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004263</td>\n","      <td>-0.025041</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>-0.778626</td>\n","      <td>0</td>\n","      <td>-0.004272</td>\n","      <td>-0.025041</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.03</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>normal.</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>3 rows × 41 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4435adf2-287a-4799-a75d-cf014bd157f9')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-4435adf2-287a-4799-a75d-cf014bd157f9 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-4435adf2-287a-4799-a75d-cf014bd157f9');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["data.drop('labels', axis=1, inplace=True)"],"metadata":{"id":"wJYgPH5uqyNw"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y = data[['label_types']]\n","data.drop('label_types', axis=1, inplace=True)"],"metadata":{"id":"CUS8naCT86BQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pc_analysis= PCA(n_components= 20) #during experiments the number of components is changed\n","\n","data = pc_analysis.fit_transform(data) #based on https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html"],"metadata":{"id":"QfDXxtcMn0xO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MSJmMlrsoe-O","executionInfo":{"status":"ok","timestamp":1651822216498,"user_tz":-60,"elapsed":9,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"1f96f0be-a5bd-439e-b6da-683ea28d039a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-1.31595862e+02, -6.72385958e+01, -1.96197313e-02, ...,\n","         3.71248143e-03,  3.95885022e-01, -2.46947105e-01],\n","       [-1.31595871e+02, -6.72390809e+01, -1.95929476e-02, ...,\n","         3.49327231e-03,  3.89430686e-01, -2.35030342e-01],\n","       [-1.31582998e+02, -6.92395025e+01, -1.98537114e-02, ...,\n","         4.71285984e-03,  3.71996021e-01, -2.28676968e-01],\n","       ...,\n","       [-1.31583200e+02, -6.92500893e+01, -2.03990100e-02, ...,\n","        -3.34912931e-02, -2.33713393e-02,  1.08956977e-01],\n","       [-1.31583187e+02, -6.92513780e+01, -2.03775921e-02, ...,\n","        -2.71639533e-02,  1.46732034e-02,  1.18231553e-01],\n","       [-1.31583203e+02, -6.92499984e+01, -2.05447750e-02, ...,\n","        -3.41784535e-02, -7.30234245e-02,  1.26996905e-01]])"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["# my_array = np.array(data)\n","# data = pd.DataFrame(my_array)"],"metadata":{"id":"lk83bUhdr9po"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dOW_DMKhvRwh","executionInfo":{"status":"ok","timestamp":1651822216498,"user_tz":-60,"elapsed":7,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"c76933b2-fe14-44a9-fa34-6197b2a9dd67"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-1.31595862e+02, -6.72385958e+01, -1.96197313e-02, ...,\n","         3.71248143e-03,  3.95885022e-01, -2.46947105e-01],\n","       [-1.31595871e+02, -6.72390809e+01, -1.95929476e-02, ...,\n","         3.49327231e-03,  3.89430686e-01, -2.35030342e-01],\n","       [-1.31582998e+02, -6.92395025e+01, -1.98537114e-02, ...,\n","         4.71285984e-03,  3.71996021e-01, -2.28676968e-01],\n","       ...,\n","       [-1.31583200e+02, -6.92500893e+01, -2.03990100e-02, ...,\n","        -3.34912931e-02, -2.33713393e-02,  1.08956977e-01],\n","       [-1.31583187e+02, -6.92513780e+01, -2.03775921e-02, ...,\n","        -2.71639533e-02,  1.46732034e-02,  1.18231553e-01],\n","       [-1.31583203e+02, -6.92499984e+01, -2.05447750e-02, ...,\n","        -3.41784535e-02, -7.30234245e-02,  1.26996905e-01]])"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["dummy_y = np_utils.to_categorical(y)"],"metadata":{"id":"brqQlXPjKEcO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x = data"],"metadata":{"id":"qL05p9rV96zQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test = train_test_split(x, dummy_y, test_size=0.30)\n","#data.to_csv('/content/drive/MyDrive/Colab Notebooks/data/processed_data/batu_data.csv')"],"metadata":{"id":"YeA2V-L__Za5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(f\"input train size = {x_train.shape}, input test size = {x_test.shape}, output train size = {y_train.shape}, output test size = {y_test.shape}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4b0o8SO0ASfL","executionInfo":{"status":"ok","timestamp":1651822216838,"user_tz":-60,"elapsed":4,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"03904bd8-2630-40b8-b24f-b68150892031"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["input train size = (101909, 20), input test size = (43676, 20), output train size = (101909, 5), output test size = (43676, 5)\n"]}]},{"cell_type":"code","source":["model = Sequential()\n","model.add(Dense(40,input_shape=(20,), activation = 'relu',kernel_initializer='random_uniform')) \n","model.add(Dense(5,activation = 'softmax',kernel_initializer='random_uniform'))\n","opt = keras.optimizers.Adam(learning_rate=0.001)\n","model.compile(loss ='categorical_crossentropy',optimizer = opt ,metrics = ['accuracy']) \n","monitor = EarlyStopping(monitor='val_loss', min_delta=1e-3, \n","                        patience=5, verbose=1, mode='auto',\n","                           restore_best_weights=True)\n","show_training_process = model.fit(x_train, y_train, batch_size=64, epochs=50, validation_data=(x_test, y_test), callbacks=[monitor])\n","model.summary()\n","\n","  \n","\n","# model = Sequential()\n","\n","# model.add(Dense(256,input_shape=(20,), activation = 'relu',kernel_initializer='random_uniform')) \n","\n","# model.add(Dense(128,activation = 'relu',kernel_initializer='random_uniform'))\n","\n","# model.add(Dense(1,activation = 'relu',kernel_initializer='random_uniform'))\n","\n","# opt = keras.optimizers.Adam(learning_rate=0.001)\n","# model.compile(loss ='mean_absolute_error',optimizer = opt ,metrics = ['accuracy']) \n","\n","# monitor = EarlyStopping(monitor='val_loss', min_delta=1e-3, \n","#                         patience=5, verbose=1, mode='auto',\n","#                            restore_best_weights=True)\n","# show_training_process = model.fit(x_train, y_train, batch_size=64, epochs=50, validation_data=(x_test, y_test), callbacks=[monitor])\n","\n","# model.summary()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sUbQJo0s_U5i","executionInfo":{"status":"ok","timestamp":1651822293840,"user_tz":-60,"elapsed":77005,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"1c3bd8f9-410e-4206-9e00-d217008eb358"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","1593/1593 [==============================] - 10s 6ms/step - loss: 0.1649 - accuracy: 0.9636 - val_loss: 0.0836 - val_accuracy: 0.9780\n","Epoch 2/50\n","1593/1593 [==============================] - 4s 2ms/step - loss: 0.0701 - accuracy: 0.9811 - val_loss: 0.0711 - val_accuracy: 0.9829\n","Epoch 3/50\n","1593/1593 [==============================] - 4s 2ms/step - loss: 0.0514 - accuracy: 0.9852 - val_loss: 0.0448 - val_accuracy: 0.9867\n","Epoch 4/50\n","1593/1593 [==============================] - 4s 3ms/step - loss: 0.0403 - accuracy: 0.9884 - val_loss: 0.0337 - val_accuracy: 0.9915\n","Epoch 5/50\n","1593/1593 [==============================] - 4s 2ms/step - loss: 0.0392 - accuracy: 0.9900 - val_loss: 0.0341 - val_accuracy: 0.9916\n","Epoch 6/50\n","1593/1593 [==============================] - 3s 2ms/step - loss: 0.0330 - accuracy: 0.9912 - val_loss: 0.0290 - val_accuracy: 0.9927\n","Epoch 7/50\n","1593/1593 [==============================] - 3s 2ms/step - loss: 0.0308 - accuracy: 0.9921 - val_loss: 0.0496 - val_accuracy: 0.9870\n","Epoch 8/50\n","1593/1593 [==============================] - 3s 2ms/step - loss: 0.0291 - accuracy: 0.9927 - val_loss: 0.0273 - val_accuracy: 0.9927\n","Epoch 9/50\n","1593/1593 [==============================] - 4s 3ms/step - loss: 0.0268 - accuracy: 0.9930 - val_loss: 0.0275 - val_accuracy: 0.9923\n","Epoch 10/50\n","1593/1593 [==============================] - 4s 3ms/step - loss: 0.0267 - accuracy: 0.9930 - val_loss: 0.0289 - val_accuracy: 0.9917\n","Epoch 11/50\n","1593/1593 [==============================] - 4s 3ms/step - loss: 0.0246 - accuracy: 0.9935 - val_loss: 0.0250 - val_accuracy: 0.9941\n","Epoch 12/50\n","1593/1593 [==============================] - 4s 2ms/step - loss: 0.0248 - accuracy: 0.9936 - val_loss: 0.0216 - val_accuracy: 0.9937\n","Epoch 13/50\n","1593/1593 [==============================] - 4s 2ms/step - loss: 0.0232 - accuracy: 0.9937 - val_loss: 0.0237 - val_accuracy: 0.9941\n","Epoch 14/50\n","1593/1593 [==============================] - 3s 2ms/step - loss: 0.0275 - accuracy: 0.9938 - val_loss: 0.0203 - val_accuracy: 0.9941\n","Epoch 15/50\n","1593/1593 [==============================] - 4s 2ms/step - loss: 0.0212 - accuracy: 0.9941 - val_loss: 0.0195 - val_accuracy: 0.9947\n","Epoch 16/50\n","1593/1593 [==============================] - 3s 2ms/step - loss: 0.0220 - accuracy: 0.9943 - val_loss: 0.0202 - val_accuracy: 0.9948\n","Epoch 17/50\n","1593/1593 [==============================] - 3s 2ms/step - loss: 0.0197 - accuracy: 0.9945 - val_loss: 0.0219 - val_accuracy: 0.9943\n","Epoch 18/50\n","1593/1593 [==============================] - 3s 2ms/step - loss: 0.0222 - accuracy: 0.9942 - val_loss: 0.0212 - val_accuracy: 0.9932\n","Epoch 19/50\n","1565/1593 [============================>.] - ETA: 0s - loss: 0.0187 - accuracy: 0.9948Restoring model weights from the end of the best epoch: 14.\n","1593/1593 [==============================] - 4s 2ms/step - loss: 0.0187 - accuracy: 0.9948 - val_loss: 0.0212 - val_accuracy: 0.9948\n","Epoch 19: early stopping\n","Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 40)                840       \n","                                                                 \n"," dense_1 (Dense)             (None, 5)                 205       \n","                                                                 \n","=================================================================\n","Total params: 1,045\n","Trainable params: 1,045\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["test_results = model.evaluate(x_test, y_test, verbose=1)\n","print(f'Test results - Loss: {test_results[0]} - Accuracy: {test_results[1]*100}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F4lVZ33rhDDj","executionInfo":{"status":"ok","timestamp":1651822302725,"user_tz":-60,"elapsed":8898,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"8d6868f3-b78a-460d-fb32-eb41d8ff5a3f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["1365/1365 [==============================] - 3s 2ms/step - loss: 0.0203 - accuracy: 0.9941\n","Test results - Loss: 0.020310362800955772 - Accuracy: 99.40699934959412\n"]}]},{"cell_type":"code","source":["plt.plot(show_training_process.history['accuracy'])\n","plt.plot(show_training_process.history['val_accuracy'])\n","plt.title('The accuracy of the model')\n","plt.ylabel('Accuracy')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Test'], loc='upper left')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"7u9MA-2hgdtw","executionInfo":{"status":"ok","timestamp":1651822303206,"user_tz":-60,"elapsed":491,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"5c245319-1e99-4536-8ec0-d8914cdc51f4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.plot(show_training_process.history['loss'])\n","plt.plot(show_training_process.history['val_loss'])\n","plt.title('The loss of the model')\n","plt.ylabel('Loss')\n","plt.xlabel('Epoch')\n","plt.legend(['Train', 'Test'], loc='upper left')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":303},"id":"kjcqEikuiDcR","executionInfo":{"status":"ok","timestamp":1651822303207,"user_tz":-60,"elapsed":7,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"9e44ba66-a95d-4936-ce2c-af53dfc8a40d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# my_array = np.array(dummy_y)\n","# old_y = pd.DataFrame(my_array)"],"metadata":{"id":"3kJ12gDFNLdO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_pred = model.predict(x_test)\n","y_pred =(y_pred>0.5)\n","#list(y_pred)\n","\n","conf_mat = confusion_matrix(y_test.argmax(axis=1), y_pred.argmax(axis=1))\n"],"metadata":{"id":"rDGuIwJZsJi2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["disp_mat = ConfusionMatrixDisplay(confusion_matrix=conf_mat, display_labels=['Normal','DOS','PROBE','R2L','U2R'])\n","fig, ax = plt.subplots(figsize=(10,10))\n","disp_mat.plot(ax=ax)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":600},"id":"xzS8io0USxmT","executionInfo":{"status":"ok","timestamp":1651823135727,"user_tz":-60,"elapsed":1038,"user":{"displayName":"Batuhan Basal","userId":"15092847989210346821"}},"outputId":"2f579635-2d49-42bc-b062-c507ace7bb14"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<sklearn.metrics._plot.confusion_matrix.ConfusionMatrixDisplay at 0x7fd43bf19f10>"]},"metadata":{},"execution_count":51},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]}]}